extends ../layout/default

block style
block content
  div(style="position: absolute; top: 50px; left: 50px")
      canvas#canvasOne(width="500", height="300") Your browser does not support HTML 5 Canvas.
      form
        label Text:
          input#textBox(placeHolder="your text")
        br
        label Text Font:
          select#textFont
            option(value="serif") serif
            option(value="sans-serif") sans-serif
            option(value="cursive") cursive
            option(value="fantasy") fantasy
            option(value="mobospace") mobospace
        br
        label Font Weight:
          select#fontWeight
            option(value="normal") normal
            option(value="bold") bold
            option(value="bolder") bolder
            option(value="lighter") lighter
        br
        label Font Style:
          select#fontStyle
            option(value="normal") normal
            option(value="italic") italic
            option(value="oblique") oblique
        br
        label Text Size:
          input#textSize(type="range" min="0" max="200" step="1" value="50")
        br
        label Fill Type:
          select#fillType
            option(value="colorFill") Color Fill
            option(value="linearGradient") Linear Gradient
            option(value="radialGradient") Radial Gradient
            option(value="pattern") pattern
        br
        label Text Color:
          input.color#textFillColor(value="FF0000")
        br
        label Text Color2:
          input.color#textFillColor2(value="000000")
        br
        label Fill Or Stroke:
          select#fillOrStroke
            option(value="fill") fill
            option(value="stroke") stroke
            option(value="both") both
        br
        label Text Baseline
          select#textBaseline
            option(value="middle") middle
            option(value="top") top
            option(value="hanging") hanging
            option(value="alphabetic") alphabetic
            option(value="ideographic") ideographic
            option(value="bottom") bottom
        br
        label Text Align
          select#textAlign
            option(value="center") center
            option(value="start") start
            option(value="end") end
            option(value="left") left
            option(value="right") right
        br
        label Alpha:
          input#textAlpha(type="range", min="0.0" max="1.0" step="0.01" value="1.0")
        br
        label Shadow X:
          input#shadowX(type="range", min="-100" max="100" step="1" value="1")
        br
        label Shadow Y:
          input#shadowY(type="range", min="-100" max="100" step="1" value="1")
        br
        label Shadow Blur:
          input#shadowBlur(type="range", min="1" max="100" step="1" value="1")
        br
        label Shadow Color:
          input.color#shadowColor(value="707070")
        br
        label Canvas Width:
          input#canvasWidth(type="range" min="0" max="1000" step="1" value="500")
        br
        label Canvas Height:
          input#canvasHeight(type="range" min="0" max="1000" style="1" value="300")
        br
        label Canvas Style Width:
          input#canvasStyleWidth(type="range" min="0" max="1000" step="1" value="500")
        br
        label Canvas Style Height:
          input#canvasStyleHeight(type="range" min="0" max="1000" step="1" value="300")
        br
        input#createImageData(type="button" value="Create Image Data")
        br
        br
        textarea#imageDataDisplay(rows=10, cols=30)
  

block script
  script(src="/lib/modernizr/modernizr.js")
  script(src="/lib/jscolor/jscolor.js")
  script.
    window.addEventListener('load', eventWindowLoaded, false);

    function canvasSupport() {
      return Modernizr.canvas;
    }

    function eventWindowLoaded() {
      var patternPreload = new Image();
      patternPreload.onload = eventAssetsLoaded;
      patternPreload.src = '/asset/texture.jpg';
    }

    function eventAssetsLoaded() {
      canvasApp();
    }

    function canvasApp() {
      var message = 'your text';
      var fontSize = '50';
      var fontFace = 'serif';
      var textFillColor = "#ff0000";
      var textAlpha = 1;
      var shadowX = 1;
      var shadowY = 1;
      var shadowBlur = 1;
      var shadowColor = "#707070";
      var textBaseline = "middle";
      var textAlign = "center";
      var fillOrStroke = "fill";
      var fontWeight = "normal";
      var fontStyle = "normal";
      var fillType = "colorFill";
      var textFillColor2 = "#000000";
      var pattern = new Image();

      if(!canvasSupport()) {
        return;
      } 

      var theCanvas = document.getElementById("canvasOne");
      var context = theCanvas.getContext("2d");

      var formElement = document.getElementById("textBox");
      formElement.addEventListener("keyup", textBoxChanged, false);

      formElement = document.getElementById("fillOrStroke");
      formElement.addEventListener("change", fillOrStrokeChanged, false);

      formElement = document.getElementById("textSize");
      formElement.addEventListener("change", textSizeChanged, false);

      formElement = document.getElementById("textFillColor");
      formElement.addEventListener("change", textFillColorChanged, false);

      formElement = document.getElementById("textFont");
      formElement.addEventListener("change", textFontChanged, false);

      formElement = document.getElementById("textBaseline");
      formElement.addEventListener("change", textBaselineChanged, false);

      formElement = document.getElementById("textAlign");
      formElement.addEventListener("change", textAlignChanged, false);

      formElement = document.getElementById("fontWeight");
      formElement.addEventListener("change", fontWeightChanged, false);

      formElement = document.getElementById("fontStyle");
      formElement.addEventListener("change", fontStyleChanged, false);

      formElement = document.getElementById("shadowX");
      formElement.addEventListener("change", shadowXChanged, false);

      formElement = document.getElementById("shadowY");
      formElement.addEventListener("change", shadowYChanged, false);

      formElement = document.getElementById("shadowBlur");
      formElement.addEventListener("change", shadowBlurChanged, false);

      formElement = document.getElementById("shadowColor");
      formElement.addEventListener("change", shadowColorChanged, false);

      formElement = document.getElementById("textAlpha");
      formElement.addEventListener("change", textAlphaChanged, false);

      formElement = document.getElementById("textFillColor2");
      formElement.addEventListener("change", textFillColor2Changed, false);

      formElement = document.getElementById("fillType");
      formElement.addEventListener("change", fillTypeChanged, false);
            
      formElement = document.getElementById("canvasWidth");
      formElement.addEventListener("change", canvasWidthChanged, false);

      formElement = document.getElementById("canvasHeight");
      formElement.addEventListener("change", canvasHeightChanged, false);

      formElement = document.getElementById("canvasStyleWidth");
      formElement.addEventListener("change", canvasStyleSizeChanged, false);

      formElement = document.getElementById("canvasStyleHeight");
      formElement.addEventListener("change", canvasStyleSizeChanged, false);

      formElement = document.getElementById("createImageData");
      formElement.addEventListener("click", createImageDataPressed, false);

      pattern.src = "/asset/texture.jpg";

      drawScreen();

      function drawScreen() {
        //- Background

        context.globalAlpha = 1;
        context.shadowColor = "#707070";
        context.shadowOffsetX = 0;
        context.shadowOffsetY = 0;
        context.shadowBlur = 0;

        context.fillStyle = "#ffffaa";
        context.fillRect(0, 0, theCanvas.width, theCanvas.height);

        //- Box

        context.strokeStyle = "#000000";
        context.strokeRect(5, 5, theCanvas.width-10, theCanvas.height-10);

        //- Text

        context.textBaseline = textBaseline;
        context.textAlign = textAlign;
        context.font = fontWeight + " " + fontStyle + " " + fontSize + "px " + fontFace;
        
        context.shadowColor = shadowColor;
        context.shadowOffsetX = shadowX;
        context.shadowOffsetY = shadowY;
        context.shadowBlur = shadowBlur;

        context.globalAlpha = textAlpha;

        var xPosition = (theCanvas.width/2);
        var yPosition = (theCanvas.height/2);

        var metrics = context.measureText(message);
        var textWidth = metrics.width;

        var tempColor;
        if(fillType == "colorFill") {
          tempColor = textFillColor;
        } else if(fillType == "linearGradient") {
          var gradient = context.createLinearGradient(xPosition-textWidth/2, yPosition, textWidth, yPosition);
          gradient.addColorStop(0, textFillColor);
          gradient.addColorStop(.6, textFillColor2);
          tempColor = gradient;
        } else if(fillType == "radialGradient") {
          var gradient = context.createRadialGradient(xPosition, yPosition, fontSize, xPosition+textWidth, yPosition, 1);
          gradient.addColorStop(0, textFillColor);
          gradient.addColorStop(.6, textFillColor2);
          tempColor = gradient;
        } else if(fillType == "pattern") {
          var tempColor = context.createPattern(pattern, "repeat");
        } else {
          tempColor = textFillColor;
        }

        switch(fillOrStroke) {
          case "fill":
            context.fillStyle = tempColor;
            context.fillText(message, xPosition, yPosition);
            break;
          case "stroke":
            context.strokeStyle = tempColor;
            context.strokeText(message, xPosition, yPosition);
            break;
          case "both":
            context.fillStyle = tempColor;
            context.fillText(message, xPosition, yPosition);
            context.strokeStyle = "#000000";
            context.strokeText(message, xPosition, yPosition);
            break;
        }
      }

      function textBoxChanged(e) {
        var target = e.target;
        message = target.value;
        drawScreen();
      }

      function textBaselineChanged(e) {
        var target = e.target;
        textBaseline = target.value;
        drawScreen();
      }

      function textAlignChanged(e) {
        var target = e.target;
        textAlign = target.value;
        drawScreen();
      }

      function fillOrStrokeChanged(e) {
        var target = e.target;
        fillOrStroke = target.value;
        drawScreen();
      }

      function textSizeChanged(e) {
        var target = e.target;
        fontSize = target.value;
        drawScreen();
      }

      function textFillColorChanged(e) {
        var target = e.target;
        textFillColor = "#" + target.value;
        drawScreen();
      }

      function textFontChanged(e) {
        var target = e.target;
        fontFace = target.value;
        drawScreen();
      }

      function fontWeightChanged(e) {
        var target = e.target;
        fontWeight = target.value;
        drawScreen();
      }

      function fontStyleChanged(e) {
        var target = e.target;
        fontStyle = target.value;
        drawScreen();
      }

      function shadowXChanged(e) {
        var target = e.target;
        shadowX = target.value;
        drawScreen();
      }

      function shadowYChanged(e) {
        var target = e.target;
        shadowY = target.value;
        drawScreen();
      }

      function shadowBlurChanged(e) {
        var target = e.target;
        shadowBlur = target.value;
        drawScreen();
      }

      function shadowColorChanged(e) {
        var target = e.target;
        shadowColor = target.value;
        drawScreen();
      }

      function textAlphaChanged(e) {
        var target = e.target;
        textAlpha = (target.value);
        drawScreen();
      }

      function textFillColor2Changed(e) {
        var target = e.target;
        textFillColor2 = "#" + target.value;
        drawScreen();
      }

      function fillTypeChanged(e) {
        var target = e.target;
        fillType = target.value;
        drawScreen();
      }

      function canvasWidthChanged(e) {
        var target = e.target;
        theCanvas.width = target.value;
        drawScreen();
      }

      function canvasHeightChanged(e) {
        var target = e.target;
        theCanvas.height = target.value;
        drawScreen();
      }

      function canvasStyleSizeChanged(e) {
        var styleWidth = document.getElementById("canvasStyleWidth");
        var styleHeight = document.getElementById("canvasStyleHeight");
        var styleValue = "width:" + styleWidth.value + "px; height:" + styleHeight.value + "px;";
        theCanvas.setAttribute("style", styleValue);
        drawScreen();
      }

      function createImageDataPressed(e) {
        var imageDataDisplay = document.getElementById("imageDataDisplay");
        imageDataDisplay.value = theCanvas.toDataURL();
        window.open(imageDataDisplay.value, "canvasImage", "left=0,top=0,width=" + theCanvas.width + ",height=" + theCanvas.height + ",toolbar=0,resizable=0");
      }
    }